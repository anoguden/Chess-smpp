const express = require("express");
const http = require("http");
const { Server } = require("socket.io");
const { Chess } = require("chess.js");

const app = express();
const server = http.createServer(app);
const io = new Server(server, {
  cors: {
    origin: "*", // allow all for testing
  },
});

const games = {}; // matchId -> { game: Chess, players: [socketId, ...] }

io.on("connection", (socket) => {
  console.log("Player connected:", socket.id);

  socket.on("createGame", () => {
    const matchId = Math.floor(10000 + Math.random() * 90000).toString();
    games[matchId] = {
      game: new Chess(),
      players: [socket.id],
    };
    socket.join(matchId);
    socket.emit("gameCreated", matchId);
  });

  socket.on("joinGame", (matchId) => {
    const game = games[matchId];
    if (game && game.players.length === 1) {
      game.players.push(socket.id);
      socket.join(matchId);
      io.to(matchId).emit("gameReady", matchId);
    } else {
      socket.emit("joinError", "Invalid or full match ID.");
    }
  });

  socket.on("move", ({ matchId, move }) => {
    const game = games[matchId];
    if (!game) return;
    const result = game.game.move(move);
    if (result) {
      io.to(matchId).emit("moveMade", {
        move: result,
        fen: game.game.fen(),
        checkmate: game.game.isCheckmate(),
        draw: game.game.isDraw(),
      });
    }
  });

  socket.on("disconnect", () => {
    console.log("Player disconnected:", socket.id);
  });
});

server.listen(4000, () => {
  console.log("Server listening on http://localhost:4000");
});
